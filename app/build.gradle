plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.shop.tcd"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        // Enables Jetpack Compose for this module
        dataBinding true
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
    }
}

dependencies {
//    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'
//    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'io.github.shashank02051997:FancyToast:2.0.1'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    // Networking
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.4'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.4'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.github.karczews:rx2-broadcast-receiver:1.0.6'
    //Dagger 2
    implementation 'com.google.dagger:dagger:2.40.5'
    kapt 'com.google.dagger:dagger-compiler:2.40.5'

    //core
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'

    //packages
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-gson:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.3.1'
//    implementation 'com.github.kittinunf.fuel:fuel-kotlinx-serialization:2.3.1'

    //Coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0-native-mt'

    //viewModel
    implementation "android.arch.lifecycle:extensions:1.1.1"

    def room_version = '2.4.1'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - RxJava2 support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
//    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
//    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ///////////////////////////////////////////////////////////////////////////////////////////////
    def lifecycle_version = '2.4.0'
    def arch_version = "2.1.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.0-alpha01"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

//Navigation
     def nav_version = '2.4.0'

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
   /* implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'*/
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation 'androidx.navigation:navigation-compose:2.5.0-alpha01'
    //Paging
    def paging_version = '3.1.0'

     // Jetpack Compose Integration
     implementation 'androidx.navigation:navigation-compose:2.5.0-alpha01'
 //Paging

    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"

    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2:$paging_version"

    // optional - RxJava3 support
    implementation "androidx.paging:paging-rxjava3:$paging_version"

    // optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-guava:$paging_version"

    // optional - Jetpack Compose integration
    implementation 'androidx.paging:paging-compose:1.0.0-alpha14'
    //WorkManager
    def work_version = '2.7.1'

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"
}