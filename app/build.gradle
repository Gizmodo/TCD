plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'io.gitlab.arturbosch.detekt' version '1.19.0'
}
ext.versionMajor = 1
ext.versionMinor = 1
ext.versionPatch = 0

@SuppressWarnings('GrMethodMayBeStatic')
def generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

def generateVersionName() {
    String versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    } else {
        versionProps['BUILD_NUMBER'] = '0'
    }

    def buildNumber = versionProps['BUILD_NUMBER'].toInteger() + 1
    versionProps['BUILD_NUMBER'] = buildNumber.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    return "${versionName}.BN-${buildNumber}"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.shop.tcd"
        minSdk 22
        targetSdk 31
        versionCode generateVersionCode()
        versionName generateVersionName()
        vectorDrawables {
            useSupportLibrary true
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=enable'] //enable or compatibility
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
    }
}
detekt {
    toolVersion = "1.19.0"
    buildUponDefaultConfig = false
    allRules = false
    config = files("$rootDir/detekt/detekt.yml")
    baseline = file("$rootDir/detekt/baseline.xml")
    input = files("src/main/java/com")
    debug = true
    parallel = true
}
dependencies {
    def retrofit_version = "2.9.0"
    def okhttp_version = '5.0.0-alpha.4'
    def glide_version = '4.13.0'
    def dagger_version = "2.40.5"
    def kotlinx_coroutines_version = "1.6.0"
    def datastore_version = "1.0.0"
    def room_version = '2.4.1'
    def lifecycle_version = "2.5.0-alpha02"
    def paging_version = '3.1.0'
    def work_version = '2.7.1'

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "androidx.datastore:datastore-preferences-rxjava3:$datastore_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore-rxjava3:$datastore_version"
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-runtime:$lifecycle_version"
    implementation "androidx.navigation:navigation-ui-ktx:$lifecycle_version"
    implementation "androidx.paging:paging-guava:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"
    implementation "androidx.room:room-guava:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
    implementation "androidx.work:work-gcm:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava3:$work_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation "io.reactivex.rxjava3:rxjava:3.1.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-compose:2.5.0-alpha01'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha14'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.0'
    implementation 'com.github.karczews:rx2-broadcast-receiver:1.0.6'
    implementation 'com.google.android.material:material:1.6.0-alpha02'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'io.github.shashank02051997:FancyToast:2.0.1'
    implementation 'androidx.core:core-ktx:1.7.0'

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    kapt "androidx.room:room-compiler:$room_version"
}
tasks.named("detekt").configure {
    reports {
        // Enable/Disable XML report (default: true)
        xml.required.set(true)
        xml.outputLocation.set(file("build/reports/detekt.xml"))

        // Enable/Disable HTML report (default: true)
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt.html"))

        // Enable/Disable TXT report (default: true)
        txt.required.set(true)
        txt.outputLocation.set(file("build/reports/detekt.txt"))

        // Enable/Disable SARIF report (default: false)
        sarif.required.set(true)
        sarif.outputLocation.set(file("build/reports/detekt.sarif"))

        custom {
            // The simple class name of your custom report.
            reportId = "CustomJsonReport"
            outputLocation.set(file("build/reports/detekt.json"))
        }
    }
}